@use '@angular/material' as mat;

@mixin styles-reset-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);

  $success-colors: mat.define-palette(mat.$green-palette, 400);
  $warning-colors: mat.define-palette(mat.$amber-palette, 400);

  a {
    color: mat.get-color-from-palette($primary);

    &:hover {
      color: mat.get-color-from-palette($primary, darker);
    }
  }

  code {
    color: mat.get-color-from-palette($foreground, text);
    background-color: mat.get-color-from-palette($background, unselected-chip);

    &[color='primary'] {
      color: mat.get-color-from-palette($primary, default-contrast);
      background-color: mat.get-color-from-palette($primary);
    }

    &[color='accent'] {
      color: mat.get-color-from-palette($accent, default-contrast);
      background-color: mat.get-color-from-palette($accent);
    }

    &[color='warn'] {
      color: mat.get-color-from-palette($warn, default-contrast);
      background-color: mat.get-color-from-palette($warn);
    }
  }

  .error-notification-overlay {
    color: mat.get-color-from-palette($warn, default-contrast);
    background-color: mat.get-color-from-palette($warn);
  }

  .info-notification-overlay {
    color: mat.get-color-from-palette($accent, default-contrast);
    background-color: mat.get-color-from-palette($accent);
  }

  .success-notification-overlay {
    color: mat.get-color-from-palette($success-colors, default-contrast);
    background-color: mat.get-color-from-palette($success-colors);
  }

  .warning-notification-overlay {
    color: mat.get-color-from-palette($warning-colors, default-contrast);
    background-color: mat.get-color-from-palette($warning-colors);
  }
}
